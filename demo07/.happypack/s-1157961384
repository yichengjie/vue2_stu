'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.convertDateTimeStr2Date = convertDateTimeStr2Date;
exports.orderListData = orderListData;
exports.getJspPageParam = getJspPageParam;
exports.random = random;
exports.toastInfo = toastInfo;
exports.toastDanger = toastDanger;
exports.toastSuccess = toastSuccess;
var _ = require('lodash');
var util = require('util_lib');
var ht = 140;
var moment = require('moment_lib');
var defaultPageSize = exports.defaultPageSize = 15;
var defaultOrderTitleName = exports.defaultOrderTitleName = "lastUpdateDate";
var datetimeForm = "YYYY-MM-DD hh:mm";

function convertDateTimeStr2Date(str) {
    return moment(str, datetimeForm);
}

function orderListData(list, titleName, ascFlag) {
    if (titleName && titleName.length > 0 && titleName !== 'default') {
        var orderTypeStr = ascFlag ? 'asc' : 'desc';
        var retArr = _.orderBy(list, [titleName], [orderTypeStr]);
        list.splice(0, list.length);
        retArr.forEach(function (item) {
            return list.push(item);
        });
    }
}

function getJspPageParam() {
    var carrCode = $("#carrCode").val();
    var contextPath = $("#contextPath").val();
    return { carrCode: carrCode, contextPath: contextPath };
}

function random(min, max) {
    return function () {
        return _.random(min, max);
    };
}

function toastInfo(msg) {
    util.toastInfo(msg, ht);
}
function toastDanger(msg) {
    util.toastDanger(msg, ht);
}
function toastSuccess(msg) {
    util.toastSuccess(msg, ht);
}